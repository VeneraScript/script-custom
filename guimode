local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/VeneraScript/venera-esp/main/myEspScript.lua"))()
ESP:Toggle(true)

ESP.Players = false -- default off
ESP.Boxes = false
ESP.Names = true
ESP.TeamColor = false
ESP.FaceCamera = true
ESP.Distance = true
ESP.UseDisplayNames = false
ESP.ShowNPCs = false -- custom toggle for NPCs

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local targets = {
    ["unicorn"] = Color3.fromRGB(255, 182, 193),
    ["outlaw"] = Color3.fromRGB(255, 0, 0),
    ["wolf"] = Color3.fromRGB(160, 160, 160),
    ["werewolf"] = Color3.fromRGB(100, 100, 100),
    ["vampire"] = Color3.fromRGB(128, 0, 128),
    -- Zombie types with different colors
    ["model_walker"] = Color3.fromRGB(0, 255, 0),  -- Green for Walkers
    ["model_runner"] = Color3.fromRGB(255, 165, 0), -- Orange for Runners
    ["zombie"] = Color3.fromRGB(0, 255, 255)       -- Cyan for generic zombies
}

local addedModels = {}

function AddTargetESP(model)
    if addedModels[model] then return end
    if model:IsA("Model") and model:FindFirstChildWhichIsA("Humanoid") then
        local nameLower = model.Name:lower()
        for keyword, color in pairs(targets) do
            if nameLower:find(keyword) then
                local part = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
                if part then
                    local displayName = keyword:sub(1,1):upper() .. keyword:sub(2):gsub("_", " ")
                    local espObj = ESP:Add(model, {
                        Name = displayName,
                        PrimaryPart = part,
                        Color = color,
                        IsEnabled = "ShowNPCs"
                    })
                    addedModels[model] = espObj
                end
                break
            end
        end
    end
end

-- Enhanced scanning with zombie detection
function ScanForTargets()
    for _, obj in ipairs(workspace:GetDescendants()) do
        -- Check for standard targets
        AddTargetESP(obj)
        
        -- Special handling for zombie models
        if obj:IsA("Model") and obj:FindFirstChildWhichIsA("Humanoid") then
            local nameLower = obj.Name:lower()
            local zombieType = nil
            
            if nameLower:find("walker") then
                zombieType = "model_walker"
            elseif nameLower:find("runner") then
                zombieType = "model_runner"
            elseif nameLower:find("zombie") then
                zombieType = "zombie"
            end
            
            if zombieType then
                local part = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")
                if part and targets[zombieType] then
                    local displayName = zombieType:sub(1,1):upper() .. zombieType:sub(2):gsub("_", " ")
                    if not addedModels[obj] then
                        local espObj = ESP:Add(obj, {
                            Name = displayName,
                            PrimaryPart = part,
                            Color = targets[zombieType],
                            IsEnabled = "ShowNPCs"
                        })
                        addedModels[obj] = espObj
                    end
                end
            end
        end
    end
end

-- Initial scan
ScanForTargets()

workspace.DescendantAdded:Connect(function(obj)
    task.wait(0.1)
    AddTargetESP(obj)
    
    -- Additional check for new zombies
    if obj:IsA("Model") and obj:FindFirstChildWhichIsA("Humanoid") then
        local nameLower = obj.Name:lower()
        if nameLower:find("walker") or nameLower:find("runner") or nameLower:find("zombie") then
            task.wait(0.5) -- Give time for full initialization
            ScanForTargets()
        end
    end
end)

-- UI (same as before with the dragging fix)
local gui = Instance.new("ScreenGui", PlayerGui)
gui.Name = "ESP_UI"
gui.ResetOnSpawn = false

local mainContainer = Instance.new("Frame", gui)
mainContainer.Size = UDim2.new(0, 240, 0, 150)
mainContainer.Position = UDim2.new(0, 20, 0, 20)
mainContainer.BackgroundTransparency = 1
mainContainer.Active = true
mainContainer.Draggable = true

local titleBar = Instance.new("Frame", mainContainer)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

local titleText = Instance.new("TextLabel", titleBar)
titleText.Size = UDim2.new(1, -60, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.BackgroundTransparency = 1
titleText.TextColor3 = Color3.new(1,1,1)
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Font = Enum.Font.SourceSansBold
titleText.TextSize = 18
titleText.Text = "ESP Menu"

local toggleBtn = Instance.new("TextButton", titleBar)
toggleBtn.Size = UDim2.new(0, 50, 0, 30)
toggleBtn.Position = UDim2.new(1, -55, 0, 0)
toggleBtn.Text = "Open"
toggleBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
toggleBtn.TextColor3 = Color3.new(1,1,1)
toggleBtn.Font = Enum.Font.SourceSansBold
toggleBtn.TextSize = 16

local mainFrame = Instance.new("Frame", mainContainer)
mainFrame.Size = UDim2.new(1, 0, 0, 120)
mainFrame.Position = UDim2.new(0, 0, 0, 30)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.Active = true
mainFrame.Visible = false

toggleBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    toggleBtn.Text = mainFrame.Visible and "Close" or "Open"
    mainContainer.Size = UDim2.new(0, 240, 0, mainFrame.Visible and 150 or 30)
end)

local function createToggle(name, posY, callback)
    local btn = Instance.new("TextButton", mainFrame)
    btn.Size = UDim2.new(1, -20, 0, 40)
    btn.Position = UDim2.new(0, 10, 0, posY)
    btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.Text = name .. ": OFF"

    local state = false
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.Text = name .. ": " .. (state and "ON" or "OFF")
        callback(state)
    end)
end

createToggle("Players", 10, function(val)
    ESP.Players = val
end)

createToggle("NPCs", 60, function(val)
    ESP.ShowNPCs = val
end)
