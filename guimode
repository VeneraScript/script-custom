local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/VeneraScript/venera-esp/main/myEspScript.lua"))()
ESP:Toggle(true)

-- ===== PERFORMANCE SETTINGS =====
local updateInterval = 0.5  -- Update every 0.5 seconds
local maxDistance = 500     -- Maximum render distance
local useDistanceCulling = true
local throttleUpdates = true

-- ===== BASIC ESP SETTINGS =====
ESP.Players = false
ESP.Boxes = false
ESP.Names = true
ESP.TeamColor = false
ESP.FaceCamera = true
ESP.Distance = true
ESP.UseDisplayNames = false
ESP.ShowNPCs = false
ESP.ShowItems = false

-- ===== TARGET CONFIGURATION =====
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Item configuration
local itemTargets = {
    -- Fuel
    ["chair"] = Color3.fromRGB(139, 69, 19),
    ["book"] = Color3.fromRGB(210, 180, 140),
    ["newspaper"] = Color3.fromRGB(255, 255, 0),
    ["barrel"] = Color3.fromRGB(128, 128, 128),
    ["coal"] = Color3.fromRGB(0, 0, 0),
    
    -- Health
    ["snake oil"] = Color3.fromRGB(255, 0, 0),
    ["bandage"] = Color3.fromRGB(255, 255, 255),
    
    -- Valuables
    ["crucifix"] = Color3.fromRGB(255, 215, 0),
    ["gold"] = Color3.fromRGB(255, 215, 0),
    ["silver"] = Color3.fromRGB(192, 192, 192),
    ["brain in jar"] = Color3.fromRGB(0, 255, 0),
    ["bonds"] = Color3.fromRGB(0, 0, 255),
    
    -- Weapons
    ["revolver"] = Color3.fromRGB(255, 0, 0),
    ["shotgun"] = Color3.fromRGB(255, 69, 0),
    ["rifle"] = Color3.fromRGB(255, 140, 0),
    ["tomahawk"] = Color3.fromRGB(139, 69, 19),
    ["vampire knife"] = Color3.fromRGB(128, 0, 128),
    
    -- Ammo
    ["revolver ammo"] = Color3.fromRGB(255, 100, 100),
    ["shotgun shells"] = Color3.fromRGB(255, 150, 50),
    ["rifle ammo"] = Color3.fromRGB(255, 200, 0),
    
    -- Cave
    ["jade sword"] = Color3.fromRGB(0, 128, 0),
    ["strange mask"] = Color3.fromRGB(75, 0, 130)
}

-- Creature configuration
local creatureTargets = {
    ["unicorn"] = Color3.fromRGB(255, 182, 193),
    ["outlaw"] = Color3.fromRGB(255, 0, 0),
    ["wolf"] = Color3.fromRGB(160, 160, 160),
    ["werewolf"] = Color3.fromRGB(100, 100, 100),
    ["vampire"] = Color3.fromRGB(128, 0, 128),
    ["model_walker"] = {color = Color3.fromRGB(0, 255, 0), name = "Zombie"},
    ["model_runner"] = {color = Color3.fromRGB(255, 165, 0), name = "Runner Zombie"}
}

-- ===== TRACKING SYSTEM =====
local trackedItems = {}
local trackedCreatures = {}
local lastUpdate = 0

-- Optimized item validation
local function IsValidItem(instance)
    -- Skip if too far
    if useDistanceCulling and LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
        local rootPart = instance:IsA("Model") and (instance.PrimaryPart or instance:FindFirstChild("Handle")) or instance
        if not rootPart then return false end
        
        local distance = (rootPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
        if distance > maxDistance then
            return false
        end
    end
    
    -- Skip environment parts
    if instance:IsA("BasePart") then
        local nameLower = instance.Name:lower()
        if nameLower:find("wall") or nameLower:find("floor") or nameLower:find("building") then
            return false
        end
    end
    
    return true
end

-- Item ESP handler
local function AddItemESP(item)
    if trackedItems[item] then return end
    
    if not IsValidItem(item) then return end
    
    local nameLower = item.Name:lower()
    local primaryPart = item:IsA("Model") and (item.PrimaryPart or item:FindFirstChild("Handle")) or item
    
    if not primaryPart then return end
    
    for itemName, color in pairs(itemTargets) do
        if nameLower:find(itemName:lower()) then
            local espObj = ESP:Add(item, {
                Name = itemName:gsub("^%l", string.upper),
                PrimaryPart = primaryPart,
                Color = color,
                IsEnabled = "ShowItems"
            })
            trackedItems[item] = espObj
            espObj.Enabled = ESP.ShowItems
            
            -- Initial visibility check
            if useDistanceCulling then
                local distance = (primaryPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
                espObj.Visible = distance <= maxDistance
            end
            
            break
        end
    end
end

-- Creature ESP handler
local function AddCreatureESP(model)
    if trackedCreatures[model] then return end
    if not model:IsA("Model") or not model:FindFirstChildWhichIsA("Humanoid") then return end
    
    local nameLower = model.Name:lower()
    local primaryPart = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
    
    if not primaryPart then return end
    
    for keyword, data in pairs(creatureTargets) do
        if nameLower:find(keyword) then
            local displayName = type(data) == "table" and data.name or keyword:gsub("^%l", string.upper)
            local color = type(data) == "table" and data.color or data
            
            local espObj = ESP:Add(model, {
                Name = displayName,
                PrimaryPart = primaryPart,
                Color = color,
                IsEnabled = "ShowNPCs"
            })
            trackedCreatures[model] = espObj
            
            -- Initial visibility check
            if useDistanceCulling and LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
                local distance = (primaryPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
                espObj.Visible = distance <= maxDistance
            end
            
            break
        end
    end
end

-- ===== SCANNING SYSTEM =====
local function ScanWorkspace()
    for _, obj in ipairs(workspace:GetDescendants()) do
        AddCreatureESP(obj)
        AddItemESP(obj)
    end
end

local descendantAddedConn = workspace.DescendantAdded:Connect(function(obj)
    task.wait(0.2) -- Short delay for initialization
    AddCreatureESP(obj)
    AddItemESP(obj)
end)

-- ===== PERFORMANCE OPTIMIZED UPDATE LOOP =====
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

local function UpdateESP()
    if throttleUpdates and (tick() - lastUpdate < updateInterval) then return end
    lastUpdate = tick()
    
    local character = LocalPlayer.Character
    local playerRoot = character and character:FindFirstChild("HumanoidRootPart")
    
    -- Update items
    for item, espObj in pairs(trackedItems) do
        if espObj.Enabled and item.Parent then
            local part = item:IsA("Model") and (item.PrimaryPart or item:FindFirstChild("Handle")) or item
            
            if part then
                -- Distance culling
                if useDistanceCulling and playerRoot then
                    local distance = (part.Position - playerRoot.Position).Magnitude
                    espObj.Visible = distance <= maxDistance
                end
                
                -- Viewport culling (skip if behind camera)
                local _, onScreen = Camera:WorldToViewportPoint(part.Position)
                espObj.Visible = espObj.Visible and onScreen
            end
        else
            espObj:Remove()
            trackedItems[item] = nil
        end
    end
    
    -- Update creatures (same logic as items)
    for model, espObj in pairs(trackedCreatures) do
        if espObj.Enabled and model.Parent then
            local part = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
            
            if part then
                if useDistanceCulling and playerRoot then
                    local distance = (part.Position - playerRoot.Position).Magnitude
                    espObj.Visible = distance <= maxDistance
                end
                
                local _, onScreen = Camera:WorldToViewportPoint(part.Position)
                espObj.Visible = espObj.Visible and onScreen
            end
        else
            espObj:Remove()
            trackedCreatures[model] = nil
        end
    end
end

RunService.Heartbeat:Connect(UpdateESP)

-- ===== UI SYSTEM =====
local gui = Instance.new("ScreenGui", PlayerGui)
gui.Name = "ESP_UI"
gui.ResetOnSpawn = false

local mainContainer = Instance.new("Frame", gui)
mainContainer.Size = UDim2.new(0, 240, 0, 150)
mainContainer.Position = UDim2.new(0, 20, 0, 20)
mainContainer.BackgroundTransparency = 1
mainContainer.Active = true
mainContainer.Draggable = true

local titleBar = Instance.new("Frame", mainContainer)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

local titleText = Instance.new("TextLabel", titleBar)
titleText.Size = UDim2.new(1, -60, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.BackgroundTransparency = 1
titleText.TextColor3 = Color3.new(1,1,1)
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Font = Enum.Font.SourceSansBold
titleText.TextSize = 18
titleText.Text = "ESP Menu"

local toggleBtn = Instance.new("TextButton", titleBar)
toggleBtn.Size = UDim2.new(0, 50, 0, 30)
toggleBtn.Position = UDim2.new(1, -55, 0, 0)
toggleBtn.Text = "Open"
toggleBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
toggleBtn.TextColor3 = Color3.new(1,1,1)
toggleBtn.Font = Enum.Font.SourceSansBold
toggleBtn.TextSize = 16

local mainFrame = Instance.new("Frame", mainContainer)
mainFrame.Size = UDim2.new(1, 0, 0, 120)
mainFrame.Position = UDim2.new(0, 0, 0, 30)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.Active = true
mainFrame.Visible = false

toggleBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    toggleBtn.Text = mainFrame.Visible and "Close" or "Open"
    mainContainer.Size = UDim2.new(0, 240, 0, mainFrame.Visible and 150 or 30)
end)

local function createToggle(name, posY, property, callback)
    local btn = Instance.new("TextButton", mainFrame)
    btn.Size = UDim2.new(1, -20, 0, 30)
    btn.Position = UDim2.new(0, 10, 0, posY)
    btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 14
    btn.Text = name .. ": " .. (ESP[property] and "ON" or "OFF")

    btn.MouseButton1Click:Connect(function()
        ESP[property] = not ESP[property]
        btn.Text = name .. ": " .. (ESP[property] and "ON" or "OFF")
        if callback then callback(ESP[property]) end
    end)
end

createToggle("Players", 10, "Players")
createToggle("NPCs", 45, "ShowNPCs", function(val)
    for creature, espObj in pairs(trackedCreatures) do
        espObj.Enabled = val
    end
end)

createToggle("Items", 80, "ShowItems", function(val)
    for item, espObj in pairs(trackedItems) do
        espObj.Enabled = val
    end
    if val then
        task.spawn(function()
            for _, obj in ipairs(workspace:GetDescendants()) do
                AddItemESP(obj)
            end
        end)
    end
end)

-- ===== INITIALIZATION =====
ScanWorkspace()

-- ===== CLEANUP HANDLER =====
local function Cleanup()
    descendantAddedConn:Disconnect()
    for _, espObj in pairs(trackedItems) do espObj:Remove() end
    for _, espObj in pairs(trackedCreatures) do espObj:Remove() end
    gui:Destroy()
end

-- Auto cleanup if game loses focus
game:GetService("UserInputService").WindowFocused:Connect(function(focused)
    if not focused then
        Cleanup()
    end
end)
